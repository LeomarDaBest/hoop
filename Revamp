

local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()

local Window = WindUI:CreateWindow({
    Title = "DR Hub", 
    Icon = "atom", 
    Author = "by @draco", 
    Folder = "CloudHub", 
    Size = UDim2.fromOffset(505, 325),
    KeySystem = {
        Key = "XRHV1KS", 
        Note = "Key In Discord", 
        URL = "https://discord.gg/U3Ahz8MM", 
        SaveKey = true, 
    }, 
    Transparent = true,
    Theme = "Blue", 
    SideBarWidth = 175,
    HasOutline = true, 
})

-- General Tab
local Tab1 = Window:Tab({
    Title = "General",
    Icon = "globe", 
})

Window:Divider()

-- Execution Tab
local Tab2 = Window:Tab({
    Title = "Execution",
    Icon = "folder", 
})

-- Variable to store ScreenGui for the indicator
local ScreenGui

-- Shooting & Indicator Section
local Section1 = Tab1:Section({ 
    Title = "Shooting & Indicator",
    TextXAlignment = "Left",
    TextSize = 17,
})

local Dropdown = Tab1:Dropdown({
    Title = "Shooting Type",
    Desc = "",
    Value = "Tab 1",
    Multi = false,
    AllowNone = true,
    Values = {
        "Silent Aim", "Camlock"
    },
    Callback = function(value)
        print(value)
        if value == "Camlock" then
            Camlock()
        end
    end
})

local Toggle2 = Tab1:Toggle({
    Title = "Indicator",
    Desc = "",
    Value = true,
    Callback = function(state)
        if state then
            ScreenGui = Instance.new("ScreenGui")
            ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

            local TextLabel = Instance.new("TextLabel")
            TextLabel.Parent = ScreenGui
            TextLabel.Size = UDim2.new(0.3, 0, 0.05, 0)
            TextLabel.Position = UDim2.new(0.35, 0, 0, 10)
            TextLabel.BackgroundTransparency = 1
            TextLabel.TextScaled = true
            TextLabel.TextColor3 = Color3.new(1, 1, 1)
            TextLabel.Font = Enum.Font.SourceSansBold
            TextLabel.Text = ""

            local function GetGoal()
                local closestDistance = math.huge
                local closestGoal = nil
                local playerPosition = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.PrimaryPart and game.Players.LocalPlayer.Character.PrimaryPart.Position

                if not playerPosition then
                    return nil, closestDistance
                end

                for _, area in ipairs({"Courts", "PracticeArea"}) do
                    local container = game.Workspace:FindFirstChild(area)
                    if container then
                        for _, court in ipairs(container:GetChildren()) do
                            for _, obj in ipairs(court:GetDescendants()) do
                                if obj.Name == "Swish" and obj.Parent:FindFirstChildOfClass("TouchTransmitter") then
                                    local magnitude = (playerPosition - obj.Parent.Position).Magnitude
                                    if magnitude < closestDistance then
                                        closestDistance = magnitude
                                        closestGoal = obj.Parent
                                    end
                                end
                            end
                        end
                    end
                end

                return closestGoal, closestDistance
            end

            local function IsInRange(dist)
                return dist >= 59 and dist <= 72
            end

            local lastStatus = nil
            local function UpdateRangeStatus()
                local Goal, Distance = GetGoal()
                local Character = game.Players.LocalPlayer.Character
                local Torso = Character and (Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso"))

                if not Torso then
                    return
                end

                local newStatus
                if Goal then
                    if IsInRange(math.floor(Distance)) then
                        newStatus = "Perfect"
                    else
                        newStatus = "Out"
                    end
                else
                    newStatus = "NoHoop"
                end

                if newStatus ~= lastStatus then
                    if newStatus == "Perfect" then
                        TextLabel.Text = "Perfect Shot Range!"
                        TextLabel.TextColor3 = Color3.new(0, 1, 0)
                        Torso.BrickColor = BrickColor.new("Lime green")
                    elseif newStatus == "Out" then
                        TextLabel.Text = "Out of Range"
                        TextLabel.TextColor3 = Color3.new(1, 0, 0)
                        Torso.BrickColor = BrickColor.new("Bright red")
                    else
                        TextLabel.Text = "No Hoop Detected"
                        TextLabel.TextColor3 = Color3.new(1, 1, 1)
                        Torso.BrickColor = BrickColor.new("White")
                    end
                    lastStatus = newStatus
                end
            end

            game:GetService("RunService").RenderStepped:Connect(function()
                if tick() % 0.2 < 0.02 then 
                    UpdateRangeStatus()
                end
            end)
        else
            if ScreenGui then
                ScreenGui:Destroy()
                ScreenGui = nil
            end
        end
    end
})

-- Camera Lock Function
local function Camlock()
    local Camera = game.Workspace.CurrentCamera
    local Player = game.Players.LocalPlayer
    local Character = Player.Character or Player.CharacterAdded:Wait()
    local Humanoid = Character:WaitForChild("Humanoid")
    local CamlockEnabled = false
    local UserInputService = game:GetService("UserInputService")

    local function GetGoal()
        local Distance, Goal = math.huge, nil
        local CharacterPosition = Character.PrimaryPart.Position

        for _, area in ipairs({"Courts", "PracticeArea"}) do
            local container = game.Workspace:FindFirstChild(area)
            if container then
                for _, court in ipairs(container:GetChildren()) do
                    for _, obj in ipairs(court:GetDescendants()) do
                        if obj.Name == "Swish" and obj.Parent:FindFirstChildOfClass("TouchTransmitter") then
                            local Magnitude = (CharacterPosition - obj.Parent.Position).Magnitude
                            if Magnitude < Distance then
                                Distance = Magnitude
                                Goal = obj.Parent
                            end
                        end
                    end
                end
            end
        end

        return Goal, Distance
    end

    local function LockCamera()
        if not CamlockEnabled then return end
        local Goal, Distance = GetGoal()

        if Goal then
            local LookAt = Goal.Position + Vector3.new(0, 20, 0)  
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, LookAt)
        end
    end

    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.MouseButton2 then
            CamlockEnabled = not CamlockEnabled
            print(CamlockEnabled and "Camlock Enabled" or "Camlock Disabled")
        end
    end)

    game:GetService("RunService").RenderStepped:Connect(LockCamera)
end

