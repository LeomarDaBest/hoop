local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()

local Window = WindUI:CreateWindow({
    Title = "DR Hub", 
    Icon = "atom", 
    Author = "by @draco", 
    Folder = "CloudHub", 
    Size = UDim2.fromOffset(505, 325),
    KeySystem = {
        Key = "XRHV1KS", 
        Note = "Key In Discord", 
        URL = "https://discord.gg/U3Ahz8MM", 
        SaveKey = true, 
    }, 
    Transparent = true,
    Theme = "Red", 
    SideBarWidth = 175,
    HasOutline = true, 
})

-- General Tab
local Tab1 = Window:Tab({
    Title = "General",
    Icon = "globe", 
})

Window:Divider()

-- Execution Tab
local Tab2 = Window:Tab({
    Title = "Execution",
    Icon = "folder", 
})

-- Shooting & Indicator Section
local Section1 = Tab1:Section({ 
    Title = "Shooting & Indicator",
    TextXAlignment = "Left",
    TextSize = 17,
})

local ToggleShooting = Tab1:Toggle({
    Title = "Enable Shooting",
    Desc = "Auto-Shoots when Jumping",
    Value = true,
    Callback = function(state)
        ShootingEnabled = state
    end,
})

-- Shooting System
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Camera = Workspace.CurrentCamera
local Humanoid = Character:WaitForChild("Humanoid")

local ShootingEnabled = true  -- Toggle for shooting system
local AutoShootEnabled = true -- Auto-shoot when jumping

-- Function to find the nearest hoop
local function GetGoal()
    local closestDistance = math.huge
    local closestGoal = nil
    local playerPosition = Character.PrimaryPart.Position

    local function CheckHoops(container)
        if not container then return end
        for _, court in ipairs(container:GetChildren()) do
            for _, obj in ipairs(court:GetDescendants()) do
                if obj.Name == "Swish" and obj.Parent:FindFirstChildOfClass("TouchTransmitter") then
                    local hoopPos = obj.Parent.Position
                    local distance = (playerPosition - hoopPos).Magnitude
                    if distance < closestDistance then
                        closestDistance = distance
                        closestGoal = obj.Parent
                    end
                end
            end
        end
    end

    CheckHoops(Workspace:FindFirstChild("Courts"))
    CheckHoops(Workspace:FindFirstChild("PracticeArea"))

    return closestGoal, closestDistance
end

-- Function to determine the best shooting arc
local function GetPerfectArc(distance)
    if distance < 60 then return 25  -- Close range arc
    elseif distance <= 65 then return 28  -- Mid-range arc
    elseif distance <= 70 then return 30  -- Slightly farther arc
    else return 32  -- Max arc for long-range shots
    end
end

-- Function to adjust aim towards the hoop
local function AimAtHoop()
    local goal, distance = GetGoal()
    if goal then
        local targetPosition = goal.Position + Vector3.new(0, GetPerfectArc(math.floor(distance)), 0)
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPosition)
    end
end

-- Function to simulate shooting
local function ShootBall()
    if not ShootingEnabled then return end

    local goal, distance = GetGoal()
    if goal then
        AimAtHoop() -- Ensure aim is perfect
        task.wait(0.1) -- Small delay to adjust aim before shooting

        -- Simulate a shot
        print("Shooting with perfect arc at", distance, "studs!")
        -- Here, you would fire the ball if the game allows scripting shots
    end
end

-- Auto-Shoot when Jumping
Humanoid.StateChanged:Connect(function(_, newState)
    if AutoShootEnabled and newState == Enum.HumanoidStateType.Jumping then
        ShootBall()
    end
end)

-- Manual Shooting on Mouse Click (Right Click)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        ShootBall()
    end
end)
